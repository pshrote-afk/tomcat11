/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.6
 * Generated at: 2025-09-09 12:03:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class EmployeeAddForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/mytags/tmtags.tld", Long.valueOf(1754657472219L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftm_005fModule_0026_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftm_005fFormId_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ftm_005fModule_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftm_005fFormId_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ftm_005fModule_0026_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005ftm_005fFormId_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      if (_jspx_meth_tm_005fModule_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function designationCodeExists(designationCode)\r\n");
      out.write("{\r\n");
      out.write("var xmlHttpRequest = new XMLHttpRequest();\r\n");
      out.write("xmlHttpRequest.onreadystatechange= function() {\r\n");
      out.write("if(this.readyState==4)\r\n");
      out.write("{\r\n");
      out.write("if(this.status==200)\r\n");
      out.write("{\r\n");
      out.write("return this.responseText;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("};\r\n");
      out.write("requestURL = \"employees/designationCodeExists?designationCode=\" + designationCode;\r\n");
      out.write("xmlHttpRequest.open(\"GET\",requestURL,true);\r\n");
      out.write("xmlHttpRequest.send();\r\n");
      out.write("}\r\n");
      out.write("function panNumberExists(panNumber)\r\n");
      out.write("{\r\n");
      out.write("var xmlHttpRequest = new XMLHttpRequest();\r\n");
      out.write("xmlHttpRequest.onreadystatechange= function() {\r\n");
      out.write("if(this.readyState==4)\r\n");
      out.write("{\r\n");
      out.write("if(this.status==200)\r\n");
      out.write("{\r\n");
      out.write("return this.responseText;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("};\r\n");
      out.write("requestURL = \"employees/panNumberExists?panNumber=\" + panNumber;\r\n");
      out.write("xmlHttpRequest.open(\"GET\",requestURL,true);\r\n");
      out.write("xmlHttpRequest.send();\r\n");
      out.write("}\r\n");
      out.write("function aadharCardNumberExists(aadharCardNumber)\r\n");
      out.write("{\r\n");
      out.write("var xmlHttpRequest = new XMLHttpRequest();\r\n");
      out.write("xmlHttpRequest.onreadystatechange= function() {\r\n");
      out.write("if(this.readyState==4)\r\n");
      out.write("{\r\n");
      out.write("if(this.status==200)\r\n");
      out.write("{\r\n");
      out.write("return this.responseText;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("};\r\n");
      out.write("requestURL = \"employees/aadharCardNumberExists?aadharCardNumber=\" + aadharCardNumber;\r\n");
      out.write("xmlHttpRequest.open(\"GET\",requestURL,true);\r\n");
      out.write("xmlHttpRequest.send();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function addAnotherEmployee()\r\n");
      out.write("{\r\n");
      out.write("window.location.href = 'EmployeeAddForm.jsp';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function addEmployee()\r\n");
      out.write("{\r\n");
      out.write("var employeeAddFrom = document.getElementById('employeeAddForm');\r\n");
      out.write("if(validateForm(employeeAddForm)==false)\r\n");
      out.write("{\r\n");
      out.write("return;\r\n");
      out.write("}\r\n");
      out.write("var errorSection = document.getElementById('errorSection');\r\n");
      out.write("var designationCodeErrorSection = document.getElementById('designationCodeErrorSection');\r\n");
      out.write("var basicSalaryCodeErrorSection = document.getElementById('basicSalaryErrorSection');\r\n");
      out.write("var panNumberErrorSection = document.getElementById('panNumberErrorSection');\r\n");
      out.write("var aadharCardNumberErrorSection = document.getElementById('aadharCardNumberErrorSection');\r\n");
      out.write("errorSection.innerText = \"\";\r\n");
      out.write("designationCodeErrorSection.innerText = \"\";\r\n");
      out.write("basicSalaryCodeErrorSection.innerText = \"\";\r\n");
      out.write("panNumberErrorSection.innerText = \"\";\r\n");
      out.write("aadharCardNumberErrorSection.innerText = \"\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var name = document.getElementById('name').value;\r\n");
      out.write("var designationCode = document.getElementById('designationCode').value;\r\n");
      out.write("var dateOfBirth = document.getElementById('dateOfBirth').value;\r\n");
      out.write("var gender = document.getElementById('employeeAddForm').gender.value;	//note: we got form's id and then .gender.value returns the value of selected radio button\r\n");
      out.write("var isIndian = document.getElementById('isIndian').checked;	//returns true/false\r\n");
      out.write("var basicSalary = document.getElementById('basicSalary').value;\r\n");
      out.write("var panNumber = document.getElementById('panNumber').value;\r\n");
      out.write("var aadharCardNumber = document.getElementById('aadharCardNumber').value;\r\n");
      out.write("\r\n");
      out.write("var designationCodeExistence = designationCodeExists(designationCode);\r\n");
      out.write("\r\n");
      out.write("var basicSalaryLengthExceeds;\r\n");
      out.write("\r\n");
      out.write("if(basicSalary.length > 10) basicSalaryLengthExceeds = true;	//10 digits + 1 decimal point = 11 length. But database only has range to hold 8 digit number\r\n");
      out.write("else basicSalaryLengthExceeds = false;\r\n");
      out.write("\r\n");
      out.write("var panNumberExistence = panNumberExists(panNumber);\r\n");
      out.write("var aadharCardNumberExistence = aadharCardNumberExists(aadharCardNumber);\r\n");
      out.write("// enter if block if any of above four are problematic \r\n");
      out.write("if(designationCodeExistence==false || basicSalaryLengthExceeds==true || panNumberExistence==true || aadharCardNumberExistence==true)\r\n");
      out.write("{\r\n");
      out.write("if(designationCodeExistence==false) designationCodeErrorSection.innerText = \"Invalid designation code\";\r\n");
      out.write("if(basicSalaryLengthExceeds==true) basicSalaryErrorSection.innerText = \"Only 8 digits allowed before decimal\";\r\n");
      out.write("if(panNumberExistence==true) \r\n");
      out.write("{\r\n");
      out.write("panNumberErrorSection.innerText = \"PAN number already exists\";\r\n");
      out.write("}\r\n");
      out.write("if(aadharCardNumberExistence==true) aadharCardNumberErrorSection.innerText = \"Aadhar card number already exists\";\r\n");
      out.write("return;	// because all 4 of these should be valid, and thus this if block should never be entered;\r\n");
      out.write("}\r\n");
      out.write("//control reaches here means all 4 fields are valid. Proceed to actually add.\r\n");
      out.write("\r\n");
      out.write("var employee = {\r\n");
      out.write("\"name\":name,\r\n");
      out.write("\"designationCode\":designationCode,\r\n");
      out.write("\"dateOfBirth\":dateOfBirth,\r\n");
      out.write("\"gender\":gender,\r\n");
      out.write("\"isIndian\":isIndian,\r\n");
      out.write("\"basicSalary\":basicSalary,\r\n");
      out.write("\"panNumber\":panNumber,\r\n");
      out.write("\"aadharCardNumber\":aadharCardNumber\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("var xmlHttpRequest = new XMLHttpRequest();\r\n");
      out.write("xmlHttpRequest.onreadystatechange = function() {\r\n");
      out.write("if(this.readyState==4)\r\n");
      out.write("{\r\n");
      out.write("if(this.status==200)\r\n");
      out.write("{\r\n");
      out.write("var responseData = this.responseText;\r\n");
      out.write("responseData = JSON.parse(responseData);\r\n");
      out.write("if(responseData.success==true)\r\n");
      out.write("{\r\n");
      out.write("var employeeAddForm = document.getElementById('employeeAddForm');\r\n");
      out.write("employeeAddFormTable.style.display='none';	\r\n");
      out.write("var message = document.getElementById('message');\r\n");
      out.write("var addButton = document.getElementById('addButton');\r\n");
      out.write("var cancelButton = document.getElementById('cancelButton');\r\n");
      out.write("message.innerText = 'Employee added. Add more?'\r\n");
      out.write("addButton.innerText = 'Yes';\r\n");
      out.write("addButton.onclick = addAnotherEmployee;\r\n");
      out.write("cancelButton.innerText = 'No';\r\n");
      out.write("}\r\n");
      out.write("else if(responseData.success==false)\r\n");
      out.write("{\r\n");
      out.write("//daoException in errorSection\r\n");
      out.write("errorSection.innerText = responseData.errorMessage;\r\n");
      out.write("}\r\n");
      out.write("else\r\n");
      out.write("{\r\n");
      out.write("alert('some problem');\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("};\r\n");
      out.write("xmlHttpRequest.open(\"POST\",\"employees/add\",true);\r\n");
      out.write("xmlHttpRequest.setRequestHeader(\"Content-Type\",\"application/json\");\r\n");
      out.write("xmlHttpRequest.send(JSON.stringify(employee));\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function populateDesignations()\r\n");
      out.write("{\r\n");
      out.write("\r\n");
      out.write("var xmlHttpRequest = new XMLHttpRequest();\r\n");
      out.write("xmlHttpRequest.onreadystatechange = function() {\r\n");
      out.write("if(this.readyState==4)\r\n");
      out.write("{\r\n");
      out.write("if(this.status==200)\r\n");
      out.write("{\r\n");
      out.write("var responseData = this.responseText;\r\n");
      out.write("var designations = JSON.parse(responseData);\r\n");
      out.write("var designationCodeSelect = document.getElementById('designationCode');\r\n");
      out.write("var dynamicOption;\r\n");
      out.write("for(var i=0;i<designations.length;i++)\r\n");
      out.write("{\r\n");
      out.write("dynamicOption = document.createElement('option');\r\n");
      out.write("dynamicOption.value = designations[i].code;\r\n");
      out.write("dynamicOption.text = designations[i].title;\r\n");
      out.write("designationCodeSelect.appendChild(dynamicOption);\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("};\r\n");
      out.write("xmlHttpRequest.open('GET','designations/getAll',true);\r\n");
      out.write("xmlHttpRequest.send();\r\n");
      out.write("}\r\n");
      out.write("window.addEventListener('load',populateDesignations);\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/MasterPageTopSection.jsp", out, false);
      out.write("\r\n");
      out.write("<script src='/stylethree/js/EmployeeAddForm.js'></script>\r\n");
      out.write("<h2>Employee (Add Module)</h2><br>\r\n");
      out.write("<form id='employeeAddForm'>\r\n");
      if (_jspx_meth_tm_005fFormId_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<span id = 'message'></span>\r\n");
      out.write("<table id='employeeAddFormTable'>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Name</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='text' id='name' name='name' maxlength='35' size='36' value=''>\r\n");
      out.write("<span id='nameErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Designation</td>\r\n");
      out.write("<td>\r\n");
      out.write("<select id='designationCode' name='designationCode'>\r\n");
      out.write("<option value='-1'>&lt;Select Designation&gt;</option>\r\n");
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("<span id='designationCodeErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Date of birth</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='date' id='dateOfBirth' name='dateOfBirth' value='1900-01-01'>	\r\n");
      out.write("<span id='dateOfBirthErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Gender</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='radio' id='male' name='gender' value='M'>Male\r\n");
      out.write("<input type='radio' id='female' name='gender' value='F'>Female\r\n");
      out.write("<span id='genderErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Indian?</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='checkbox' id='isIndian' name='isIndian' value='Y'>\r\n");
      out.write("</td>\r\n");
      out.write("<td>\r\n");
      out.write("<span id='isIndianErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Basic salary</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='text' id='basicSalary' name='basicSalary' maxlength='11' size='13' value='' style='text-align:right'>\r\n");
      out.write("<span id='basicSalaryErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>PAN number</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='text' id='panNumber' name='panNumber' maxlength='15' size='16' value=''>\r\n");
      out.write("<span id='panNumberErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Aadhar Card Number</td>\r\n");
      out.write("<td>\r\n");
      out.write("<input type='text' id='aadharCardNumber' name='aadharCardNumber' maxlength='15' size='16' value=''>\r\n");
      out.write("<span id='aadharCardNumberErrorSection' style='color:red'></span>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<span id='errorSection' style='color:red'></span>\r\n");
      out.write("<br><br>\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>\r\n");
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("</td>\r\n");
      out.write("<td>\r\n");
      out.write("<button type='button' id='addButton' onclick='addEmployee()'>Add</button>\r\n");
      out.write("</form>\r\n");
      out.write("</td>\r\n");
      out.write("<td>\r\n");
      out.write("<button type='button' id='cancelButton' onclick='cancelEmployeeAddition()'>Cancel</button>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<form action='/stylethree/Employees.jsp' id='cancelEmployeeAdditionForm'>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/MasterPageBottomSection.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_tm_005fModule_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  tm:Module
    com.thinking.machines.hr.tags.ModuleTagHandler _jspx_th_tm_005fModule_005f0 = (com.thinking.machines.hr.tags.ModuleTagHandler) _005fjspx_005ftagPool_005ftm_005fModule_0026_005fname_005fnobody.get(com.thinking.machines.hr.tags.ModuleTagHandler.class);
    _jspx_th_tm_005fModule_005f0.setPageContext(_jspx_page_context);
    _jspx_th_tm_005fModule_005f0.setParent(null);
    // /EmployeeAddForm.jsp(2,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_tm_005fModule_005f0.setName("EMPLOYEE");
    int _jspx_eval_tm_005fModule_005f0 = _jspx_th_tm_005fModule_005f0.doStartTag();
    if (_jspx_th_tm_005fModule_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005ftm_005fModule_0026_005fname_005fnobody.reuse(_jspx_th_tm_005fModule_005f0);
    return false;
  }

  private boolean _jspx_meth_tm_005fFormId_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  tm:FormId
    com.thinking.machines.hr.tags.FormIdTagHandler _jspx_th_tm_005fFormId_005f0 = (com.thinking.machines.hr.tags.FormIdTagHandler) _005fjspx_005ftagPool_005ftm_005fFormId_005fnobody.get(com.thinking.machines.hr.tags.FormIdTagHandler.class);
    _jspx_th_tm_005fFormId_005f0.setPageContext(_jspx_page_context);
    _jspx_th_tm_005fFormId_005f0.setParent(null);
    int _jspx_eval_tm_005fFormId_005f0 = _jspx_th_tm_005fFormId_005f0.doStartTag();
    if (_jspx_th_tm_005fFormId_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005ftm_005fFormId_005fnobody.reuse(_jspx_th_tm_005fFormId_005f0);
    return false;
  }
}
